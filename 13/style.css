* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:root {
  font-size: 62.5%;
  font-family: 'Source Sans Pro', sans-serif;
}

body {
  background: #1f2937;
}

body, input, button {
  font-size: 1.6rem;
  font-family: 'Source Sans Pro', sans-serif;
}

form {
  padding: 2.4rem;
  max-width: 40rem;
  margin: 0 auto;
}

#credit-card {
  width: 32.8rem;
  height: 21.2rem;

  perspective: 60rem; /*como definimos o #credit-card > div o position absolute, usando a prop: perspective 60, vai jogar as div para o meio  */
  /* position: relative;  - Poderiamos usar essa prop para poder posicionar seu filhos sejam relativo ao pai, porém estamos usando essa outra abordagem */
}


#credit-card .front .header-card {
  margin: 1.6rem 2.4rem;
  padding: 1.6rem 2.4rem;

  display: flex;
  justify-content: space-between;
}

#credit-card .front .middle-card {
  margin-top: 3rem;
  text-align: center;
  line-height: 2rem;
  font-size: 1.8rem;
  word-spacing: 2.6rem;
  color: white;
}

#credit-card .front .bottom {
  margin: 2.4rem;
  padding-inline: 2.4rem;
  gap: 1.6rem;
  align-items: center;

  font-weight: 400;
  font-size: 1.4rem;
  line-height: 1.6rem;

  color: #F9FAFB;
  opacity: 0.5;
}

.ccName {
  flex-basis: 75%;
  width: fit-content;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  text-transform: uppercase;
}

.expirationDate{
  font-size: 1.7rem;
}

#credit-card .back .cvv {
  position: absolute;
  right: 27%;
  bottom: 35%;

  font-weight: 600;
  font-size: 1.4rem;
  line-height: 1.6rem;

  
}

#credit-card > div {  /* Primeiros filhos "div" diretos de #credi-card, vão herdar as props height e width do #credit-card */
  width: inherit;   
  height: inherit;

  position: absolute;
  top: 0;
  left: 0;
  z-index: 1000;
  transition: all 1s cubic-bezier(0.175, 0.885, 0.32, 1.275); /*Essa propriedade vai fazer uma transição mais suave na rotate */
  transform-style: preserve-3d; /* Essas duas props, vamos usar para poder fazer o efeito de flip */
  backface-visibility: hidden; /*Isso esconde o elemento que está por trás do elemento front */
}

#credit-card .front {
  background-image: url("./assets/front.png");
  background-repeat: no-repeat;

  transform: rotateY(0); /* Props que vão fazer a rotação do cartão*/
}

#credit-card .back {
  background: url("./assets/back.png") no-repeat;
  top: -5px;

  transform: rotateY(-180deg); /*Parte de traz do cartão que está escondido */
}
#credit-card:active .front, 
#credit-card:hover .front {
  transform: rotateY(180deg); /*Quando passar o mouse por cima do card, o card que está na frente vai rotacionar no eixo Y de 0 para 180º.  */
}

#credit-card:active .back,
#credit-card:hover .back {
  transform: rotateY(0); /*Como vimos que o frente do cartão rotaciona e fica invisivel por conta da props backface e a prop de .front, então ele inverte e quem fica visivel agora é o .back */
}

/* Formulário */

.flex {
  display: flex;
}

.inputs {
  margin-top: 4.8rem;

  flex-direction: column;
  gap: 2.4rem;
}

label {
  font-weight: 600;
  font-size: 1.4rem;
  color: #E5E7EB;

  align-items: center;
  gap: .4rem;
}

input {
  margin-top: .4rem;

  width: 100%;

  padding: 1.2rem;
  border: .1rem solid #374151;

  background: #111827;
  border-radius: .4rem;
  color: #F3F4F6;
}

input:focus {
  outline: .15rem solid #9333EA;
}

input:invalid:focus {
  border: 0.15rem solid #FB7185;
}

input + .warning {
  display: none;
}

input:invalid:focus + .warning {
  display: block;
  margin-top: .8rem;
  font-size: 1.4rem;
  color: #FB7185;

  display: flex;
  align-items: center;
  gap: .4rem;
}

.col-2 {
  gap: 1.2rem;
  align-items: center;
}

.col-2 .input-wrapper:nth-child(2) {
  flex-basis: 40%;
}

.info-secuity {
  margin-top: 4.8rem;

  justify-content: center;
  gap: .8rem;

  font-size: 1.4rem;
  color: #E5E7EB;
}


button {
  margin-top: 10rem;

  border: 0;
  padding: 1.6rem;
  width: 100%;

  border-radius: .4rem;
  
  background-color: #9333EA;
  box-shadow: .0rem .4rem 1.6rem rgba(0, 0, 0, 0.1);

  color: #F3F4F6;
  font-weight: 600;
  font-size: 1.8rem;
  line-height: 2.4rem;
  cursor: pointer;

  transition: background .4s;
}

button:hover {
  background: #A855F7;
}


@media screen and (min-width: 890px) {
  body {
    display: grid;
    height: 100vh;
    place-content: center;
    background-color: #111827;
  }
  form {
    display: grid;
    grid-template-areas: 
      "form card"
      "form security"
      "btn btn";
    grid-template-columns: max-content max-content;
    grid-template-rows: max-content 1fr;
    justify-content: center;
    gap: 3.2rem;
    padding: 3.2rem;
    
  }

  #credit-card {
    grid-area: card;
    padding: 3.2rem;
  }

  #form {
    grid-area: form;
    margin: initial;
  }

  .info-secuity {
    grid-area: security;
    margin: initial;
    align-items: center;
  }

  form button {
    grid-area: btn;
    margin: initial;
    margin-top: 3.2rem;
  }
}